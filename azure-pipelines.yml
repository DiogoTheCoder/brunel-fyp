variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

trigger:
  branches:
    include:
    - master

strategy:
  matrix:
   Ubuntu:
     imageName: 'ubuntu-16.04'
   macOS:
     imageName: 'macOS-10.15'
   Windows:
     imageName: 'windows-2019'

pool:
  vmImage: $(imageName)

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '12.x'
    displayName: 'Install Node.js'

  - bash: |
      /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
      echo ">>> Started xvfb"
    displayName: Start xvfb
    condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))

  - task: Cache@2
    inputs:
      key: 'yarn | "$(Agent.OS)" | yarn.lock'
      restoreKeys: |
        yarn | "$(Agent.OS)"
      path: $(YARN_CACHE_FOLDER)
    displayName: Cache@2

  - script: yarn --frozen-lockfile
    displayName: Install Dependencies

  - script: yarn compile
    displayName: Build Extension

  - bash: node ./out/test/runTest.js
    displayName: Run Tests
    env:
      DISPLAY: ':99.0'